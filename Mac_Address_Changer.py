#!/usr/bin/env python3
import subprocess, optparse, getpass, re

root_password = getpass.getpass("Enter Sudo password : ")
print("\n")


def get_arguments():
    parser = optparse.OptionParser()
    parser.add_option("-i", "--interface", dest="interface", help="\t\tInterface to change MAC address")
    parser.add_option("-m", "--mac", dest="new_mac", help="\t\tNew Mac Address")
    (options, arguments) = parser.parse_args()
    if not options.interface:
        parser.error("Please specify an interface with -i or --interface use --help for more info")

    elif not options.new_mac:
        parser.error("Please specify an new mac with -m or --mac use --help for more info")

    return options


def change_mac(interface, new_mac):
    cmd1 = "ifconfig " + interface + " down"
    cmd2 = "ifconfig " + interface + " hw" + " ether " + new_mac
    cmd3 = "ifconfig " + interface + " up"
    print(f"[+] Changing MAC address for " + interface + " to " + new_mac)
    subprocess.call('echo {} | sudo -S {}'.format(root_password, cmd1), shell=True)
    subprocess.call('echo {} | sudo -S {}'.format(root_password, cmd2), shell=True)
    subprocess.call('echo {} | sudo -S {}'.format(root_password, cmd3), shell=True)


options = get_arguments()
change_mac(options.interface, options.new_mac)
current_mac = subprocess.check_output(f"cat /sys/class/net/{options.interface}/address", shell=True)
current_mac = current_mac.__str__()
mac_address_search_results = re.search(r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", current_mac)


if mac_address_search_results.group(0) == options.new_mac:
    print("[+] Successfully changed mac address")
    print(f"[+] Current MAC address on {options.interface} is {mac_address_search_results.group(0)}")
else:
    print(f"[-] changing MAC address was unsuccessful MAC address is still {mac_address_search_results.group(0)}")
    print(f"[-] Current MAC address on {options.interface} is {mac_address_search_results.group(0)}")
    change_mac(options.interface, options.new_mac)
